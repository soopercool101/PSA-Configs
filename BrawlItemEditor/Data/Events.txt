00010100
Synchronous Timer
Pause the current flow of events until the set time is reached. Synchronous timers count down when they are reached in the code.
1

00020000
No Event
No Event.


00020100
Asynchronous Timer
Pause the current flow of events until the set time is reached. Asynchronous Timers start counting from the beginning of the animation.
1

00040100
Set Loop
Set a loop for X iterations.


00050000
Execute Loop
Execute the the previously set loop.


00060000
Loop Break
Breaks out of the current loop.


00070100
Sub Routine
Enter the event routine specified and return after ending.
2

00080000
Return
Return from a Subroutine.

00090100
Goto
Goto the event location specified and execute (does not return afterwards).
2

000A0100
If: Requirement
Start an If block until an Else or an End If is reached. Use this If to check for a requirement.
6

000A0200
If: Value
Start an If block until an Else or an End If is reached. Use this If to check for a requirement with a specified value.
65

000A0400
If: Comparison
Start an If block until an Else or an End If is reached. Use this If to compare values.
6505

000B0100
And: Requirement
Insert an And statement to an If statement. Use this And to check for a requirement.
6

000B0200
And: Value
Insert an And statement to an If statement. Use this And to check for a requirement with a specified value.
65

000B0400
And: Comparison
Insert an And statement to an If statement. Use this And to compare values.
6505

000C0100
Or: Requirement
Insert an Or statement to an If statement. Use this And to check for a requirement.
6

000C0200
Or: Value
Insert an Or statement to an If statement. Use this Or to check for a requirement with a specified value.
65

000C0400
Or: Comparison
Insert an Or statement to an If statement. Use this Or to compare values.
6505

000D0100
Else If: Requirement
Insert an Else If block to go with an If series. Use this Else If to check for a requirement.
6

000D0200
Else If: Value
Insert an Else If block to go with an If series. Use this Else If to check for a requirement with a specified value.
65

000D0400
Else If: Comparison
Insert an Else If block to go with an If series. Use this Else if to compare values.
6505

000E0000
Else
Insert an Else block to go with an If series.


000F0000
End If
End an If block.


00100200
Switch
Begin a multiple case Switch block (Doesnt seem to work on Action Tabs).
05

00110100
Case
Handler for if the variable in the switch block equals the specified value.


00120000
Default Case
The case chosen if none of the others are executed in a switch block.


00130000
End Switch
End a Switch block.


00180000
Break
Appears within Case statements; exits the switch event completely. All code located in the same case block after this event will not be executed.

01010000
Loop Rest
Stops a loop from iterating again until the "Set Loop Resume Requirement" is achieved.


02000300
Change Action Status: Requirement
Change the current action upon the specified requirement being met. The requirement does not have to be met at the time this ID is executed - it can be used anytime after execution. This Change Action Status is based on a requirement being met.
006

02000400
Change Action Status: Value
Change the current action upon the specified requirement being met. The requirement does not have to be met at the time this ID is executed - it can be used anytime after execution. This Change Action Status is based on a requirement with a specified value being met.
0065

02000600
Change Action Status: Comparison
Change the current action upon the specified requirement being met. The requirement does not have to be met at the time this ID is executed - it can be used anytime after execution. This Change Action Status is based on a comparison.
006505

02010200
Change Action: Requirement
Change the current action upon the specified requirement being met. The requirement does not have to be met at the time this ID is executed - it can be used anytime after execution. This Change Action is based on a requirement being met.
06

02010300
Change Action: Value
Change the current action upon the specified requirement being met. The requirement does not have to be met at the time this ID is executed - it can be used anytime after execution. This Change Action is based on a requirement with a specified value being met.
065

02010500
Change Action: Comparison
Change the current action upon the specified requirement being met. The requirement does not have to be met at the time this ID is executed - it can be used anytime after execution. This Change Action is based on a comparison.
06505


02040100
Additional Action Requirement: Requirement
Add an additional requirement to the preceeding Change Action statement. This Additional Action Requirement is based on a requirement being met.
6

02040200
Additional Action Requirement: Value
Add an additional requirement to the preceeding Change Action statement. This Additional Action Requirement is based on a requirement with a specified value being met.
65

02040400
Additional Action Requirement: Comparison
Add an additional requirement to the preceeding Change Action statement. This Additional Action Requirement is based on a comparison.
6505

02050300
Set Status ID Interrupt: Requirement
Links a Status ID with an interrupt, which will only allow the interrupt to execute (or prevent) the Status ID. This Set Status ID Interrupt is based on a requirement being met. (Warning: Persists globally and can cause memory leaks. Recommended for the on-load routine.)
006

02050400
Set Status ID Interrupt: Value
Links a Status ID with an interrupt, which will only allow the interrupt to execute (or prevent) the Status ID. This Set Status ID Interrupt is based on a requirement with a specified value being met. (Warning: Persists globally and can cause memory leaks. Recommended for the on-load routine.)
0065

02050600
Set Status ID Interrupt: Comparison
Links a Status ID with an interrupt, which will only allow the interrupt to execute (or prevent) the Status ID. This Set Status ID Interrupt is based on a comparison. (Warning: Persists globally and can cause memory leaks. Recommended for the on-load routine.)
006501

02060100
Enable Action Status ID
Enables the given Status ID.


02080100
Disable Action Status ID
Disables the Action associated with the given Status ID.

02090200
Invert Action Status ID
Appears to invert (or possibly only disable) a specific Status ID's enabled/disabled status. For example, if a character can crawl, this is used to disable the ability to dash when crouched, even though naturally crouching allows dashing through 020A (Allow Specific Interrupt).

64000000
Allow Interrupt
Allow the current action to be interrupted by another action.


020A0100
Allow Specific Interrupt
Allows interruption only by specific commands. See parameters for list of possible interrupts.


64010000
Disallow Interrupt
Disable all interrupts on the current action.


020B0100
Prevent Specific Interrupt
Closes the specific interruption window. Must be set to the same thing as the allow specific interrupt that you wish to cancel.

020C0100
Clear Prevent Interrupt
Possibly unregisters a previously created interrupt.

020E0000
Clear All Action Interrupts
Unregisters all previously created interrupts.

04000100
Change Sub Action
Change the current sub action.


04000200
Change Sub Action: Pass Frame
Change the current sub action. Can specify whether or not to pass the current frame or start the animation over.
03

04000300
Change Sub Action: Pass Frame Speed
Change the current sub action. Can specify whether or not to pass the current frame or start the animation over. Also can specify the frame speed if you give it a scalar/variable, it reads it as the frame speed
03

040C0100
Change Sub Action (Reverse Play)
Change the current sub action (plays in reverse).


040C0200
Change Sub Action (Reverse Play): Pass Frame
Change the current sub action (plays in reverse). Can specify whether or not to pass the current frame or start the animation over.
03

040C0300
Change Sub Action (Reverse Play): Pass Frame Speed
Change the current sub action (plays in reverse). Can specify whether or not to pass the current frame or start the animation over. Also can specify the frame speed if you give it a scalar/variable, it reads it as the frame speed
03


04020100
Set Loop Resume Condition: Requirement
Sets the condition that needs to be met in order for a loop to iterate again after a Loop Rest has been hit (must be used before Loop Rest command). This Set Loop Resume is based on a requirement.
6

04020200
Set Loop Resume Condition: Value
Sets the condition that needs to be met in order for a loop to iterate again after a Loop Rest has been hit (must be used before Loop Rest command). This Set Loop Resume is based on a requirement with a specified value being met.
65

04020400
Set Loop Resume Condition: Comparison
Sets the condition that needs to be met in order for a loop to iterate again after a Loop Rest has been hit (must be used before Loop Rest command). This Set Loop Resume is based on a comparison.
6505

04030100
Additional Loop Resume Condition: Requirement
Add an additional requirement to Set Loop Resume Condition. This Additional Set Loop Resume is based on a requirement.
6

04030200
Additional Loop Resume Condition: Value
Add an additional requirement to Set Loop Resume Condition. This Additional Set Loop Resume is based on a requirement with a specified value being met.
65

04030400
Additional Loop Resume Condition: Comparison
Add an additional requirement to Set Loop Resume Condition. This Additional Set Loop Resume is based on a comparison.
6505

04050100
Additional Loop Resume Condition: Unknown
Used quite a bit in Meta Knight's special move actions, as well as Pit's Down-B.

06000D00
Offensive Collision
Generate an offensive collision bubble with the specified parameters. Helpful info: tinyurl.com/HitboxParam 
0000011111110

06010200
Change Hitbox Damage
Changes a specific hitbox's damage to the new amount. Only guaranteed to work on Offensive Collisions.

06140200
Add Hitbox Damage
Add a specific hitbox's damage.

06160100
Hitbox Damage Multiplier
Muliplies the damage of every hitbox spawned from the character by the specified value. Persists until changed
1

06030100
Delete Hitbox
Deletes a hitbox of the specified ID. Only guaranteed to work on Offensive Collisions.

06020200
Change Hitbox Size
Changes a specific hitbox's size to the new amount. Only guaranteed to work on Offensive Collisions.
01

061B0500
Move Hitbox
Repositions an already-existing hitbox.
00111

06040000
Terminate Collisions
Remove all currently present collision bubbles.

06050100
Body Collision
Change how the character's own collision bubbles act. (primarily used to invoke invulnerability)

06080200
Bone Collision
Sets specific bones to a type of body collision.

06060100
Undo Bone Collision
Sets bones to their normal collision type.

1E000200
Super/Heavy Armor
Begins super armor or heavy armor. Set both parameters to 0 to end the armor.
01

1E030100
Add/Subtract Damage
Adds or subtracts the specified amount of damage from the character's current percentage.
1

060A0800
Catch Collision
Generate a grabbing collision bubble with the specified parameters.
00111100

060C0100
Delete Catch Collision
Deletes the catch collision with the specified ID.

060D0000
Terminate Catch Collisions
Remove all currently present grab collision bubbles.

06101100
Inert Collision
Generates an oblivious hitbox only used to detect collision with other characters/objects.
00011110003003030

06130000
Terminate Inert Collisions
Remove all currently present inert collision bubbles.

062C0F00
Special Collateral Collision
Used for the "bump" collisions that occur when a character in knockback collides with another body.
000001111111000

060E1100
Throw Attack Collision
Specify the properties of the throw to be used when 060F0500 is executed. Used for other things as well, such as some Final Smashes.
00000000111000330

060F0500
Throw Collision
Throws an opponent based on data provided by 060E1100.
00555

06150F00
Special Offensive Collision
Generate an offensive collision bubble - is able to achieve unique effects. Helpful info: tinyurl.com/HitboxParam
000001111111000

06192F00
Special Offensive Collision SSE
Generate an offensive collision bubble - is able to achieve unique effects and is natively used in Subspace. Helpful info: tinyurl.com/HitboxParam
00001001010111111011133000030030333303303333305

06170300
Defensive Collision
Generate a defensive collision bubble that nullifies close combat attacks. Read more about how this works here: https://tinyurl.com/defensive-collisions
000

06180300
Defensive Collision: Remove
Removes defensive collisions.

061E0300
Defensive Collision: Flip Toggle
Allows the option to flip opponents if they hit an active defensive collision. Used primarily with Pit's Down Special.
030

06241000
Generate Defensive Collision Bubble
Generates a custom Defensive Collision bubble, and is used nativey by Subspace enemies, but can be used by Fighters. However, Fighter usage conflicts with the Franklin Badge, so further PSA coding is required to work around it.
0001111111111310

062B0D00
Thrown Collision
Generates a damage collision bubble surrounding the character being thrown.
0000011111110


0A000100
Sound Effect
Play a specified sound effect.

0A020100
Sound Effect (Transient)
Play a specified sound effect. The sound effect ends with the action.

0A050100
Entity Independent Sound Effect
Appears to play a sound effect, will not terminate if the entity calling it does. Used during victories as well as other places like Pit's taunts or Mario's fireballs.

0A010100
Sound Effect (Added Terrain)
Play a specified sound effect with an added terrain sound effect.

0A090100
Sound Effect (Added Landing)
Play a specified sound effect plus a sound for landing on the current terrain - the values are different from normal sound effects.


0A0A0100
Sound Effect (Added Impact)
Play a specified sound effect (plus a sound for smacking the current terrain?) - the values are different from normal sound effects. 

0A070100
Sound Effect 07
Play a specified sound effect. sound effect occurs when landing. However, it has no effect by most Articles. Also, can call it by "Call Setted Sound Effect".

0A080000
Call Setted Sound Effect
Plays the sound effect set by "Sound Effect 07".

0C0B0000
Low Voice Clip
Play a random voice clip from the selection of low voice clips. (Sound List 2, 0-3)


0C190000
Damage Voice Clip
Plays a random voice clip from the selection of damage voice clips. (Sound List 0, 0-1; Sound List 1, 0-1)


0C1D0000
Ottotto Voice Clip
Plays the voice clip for ottotto (ledge teeter). PM appears to repurpose this for an extra set of random voice clips.


0C1E0000
Final Smash Voice Clip?
Plays a voice clip, possibly for a Final Smash. Used in Meta Knight's FinalStart and FinalAirStart Sub Actions, but also used in vBrawl Pit's Ottotto sub action for some reason.

0C1F0000
Eating Voice Clip
Play a random voice clip from the selection of eating voice clips.


0C1A0200
Shooting Item Sound Effect
If holding item has a bullet, the sound effect of parameter 0 is played, and if there is no bullet, the sound effect of parameter 1 is played. If not hold a item, nothing happens.

0A030100
Stop Sound Effect
Stops the specified sound effect immediately.

0A060100
Stop Transient Sound Effect
Stops the specified transient sound effect immediately.

10000100
Generate Article
Generates a character specific article: a pre-made prop effect from the prop library.


10000200
Generate Article: Subaction Exclusive
Generates a character specific article: a pre-made prop effect from the prop library. Has option to force article to terminate after subaction ends.
03

10010100
Article Event 02
Makes the article preform an animation. For example, to make pit shoot his arrow, set it to 1.


10010200
Set Ex-Anchored Article Action
Does the same thing as Set Article Action and Set Article Action 2 but seems to work on articles that are only initially attached to the character. (Used on Lucario's Aura Sphere)


10050200
Article Visibility
Makes an article visible or invisible.
03

100C0200
Article Frame Speed
Change the animation speed of the article.


10040100
Set Article Action
Sets the specified article to execute the specified action immediately. Only works on anchored articles (Cape, FLUDD, not fireball, water).


10040200
Set Article Action
Sets the specified article to execute the specified action immediately. Only works on anchored articles (Cape, FLUDD, not fireball, water).


10040300
Set Anchored Article Action
Sets the specified article to execute the specified action immediately. Only works on anchored articles (Cape, FLUDD, not fireball, water).
003

10070200
Set Article Action
Does the same thing as Set Article Action but seems to work on articles that aren't attached to the character.


10080200
Set Remote Article Action
Does the same thing as Set Article Action but seems to work on articles that aren't attached to the character. (Used on Snake's downB)


10020100
ONLY Article Event
Article Animaion.


100A0300
Link Article to Bone
Used in Snake's Neutral B to attach the grenade to his hand.


10130100
Link Character and Article?
Seems to be used whenever a detached article needs to change its action.

10030100
Remove Article
Removes an article.

0C050000
Terminate Instance
If used within an article, causes the acting article instance to terminate (if possible). Has other niche uses as well, such as loading secondary instance if available (i.e. character transformation).


0C080000
Terminate Self
Used by certain article instances to remove themselves instead of "Terminate Instance". (note: nearly all projectiles in the game will terminate fine with the terminate instance command).


11001000
Graphic Effect (Detached)
Generate a graphical effect. Stays at the spot it was spawned.
0011111111111113

11010A00
Graphic Effect (Attached)
Generate a graphical effect. Moves with the bone it was attached to.
0011111113

11020A00
Graphic Effect (Attached, Joint Relative)
Generate a graphical effect. Moves with the bone it was attached to. When attached, the graphic will rotate (and possibly) move alongside its attached bone.
0011111113

111A1000
Graphic Effect (Detached, Step)
Generate a graphical effect. Stays at the spot it was spawned. Changes based on terrain.
0011111111111113

111B1000
Graphic Effect (Detached, Landing)
Generate a graphical effect. Stays at the spot it was spawned. Changes based on terrain.
0011111111111113

111C1000
Graphic Effect (Detached, Tumble Landing)
Generate a graphical effect. Stays at the spot it was spawned. Changes based on terrain.
0011111111111113

11190A00
Graphic Effect (Unknown)
Generate a graphical effect. Used in Link's Final Smash.
0011111113

11150300
Terminate Graphic Effect
Terminate a lingering graphical effect.
033

11060000
Pause Fighter GFX
Pauses the animation of any currently active GFX spawned from your fighter at the point this command is activated. Any GFX spawned afterward will still play normally.

11070000
Resume Fighter GFX
Resumes any GFX which were previously paused by the Pause Fighter GFX command.

11031400
Sword Glow
Creates glow of sword. Only usable when the proper effects are loaded by their respective characters.
00011101113001111111

11041700
Hammer Glow
Creates glow of Hammer.
00011101113001111111001

11050100
Terminate Sword Glow
Remove all Glow effects.


21010400
Flash Overlay Effect
Generate a flash overlay effect over the character with the specified colors and opacity. Replaces any currently active flash effects.


21020500
Change Flash Overlay Color
Changes the color of the current flash overlay effect.


21050600
Flash Light Effect
Generate a flash lighting effect over the character with the specified colors, opacity and angle. Replaces any currently active flash effects.
000011

21070500
Change Flash Light Color
Changes the color of the current flash light effect.


21000000
Terminate Flash Effect
Terminate all currently active flash effects.


11170600
Screen Tint
Tint the screen to the specified color.


11170700
Screen Tint 2
Tint the screen to the specified color.


11180200
End Screen Tint
End Screen Tint.


111E0100
Set Flashing Effect?
Start Flashing Effect.


111F0100
End Flashing Effect?
End Flashing Effect.


12000200
Basic Variable Set
Set a basic variable to the specified value.
05

12110200
Basic Variable Set Absolute
Sets a Basic type variable to the absolute value of the specified value
05

12010200
Basic Variable Add
Add a specified value to a basic variable.
05

12020200
Basic Variable Subtract
Subtract a specified value from a basic variable.
05

120D0200
Basic Variable Multiply
Multiply a basic value by the specified value.
05

120E0200
Basic Variable Divide
Divide a basic value by the specified value.
05

12030100
Basic Variable Increment
Variable++ (adds 1)
5

12040100
Basic Variable Decrement
Variable-- (subtracts 1)
5

12050300
Basic Variable Random
Load a basic variable with a random integer between a min and max value.
005

12060200
Float Variable Set
Set a floating point variable to the specified value.
15

12120200
Float Variable Set Absolute
Set a float variable equal to the absolute value of some float.
15

12070200
Float Variable Add
Add a specified value to a float variable.
15

12080200
Float Variable Subtract
Subtract a specified value from a float variable.
15

120F0200
Float Variable Multiply
Multiply a specified value with a float variable.
15

12100200
Float Variable Divide
Divide a specified value with a float variable.
15

12090300
Float Variable Random
Load a float variable with a random integer between a min and max value.
115

120A0100
Bit Variable Set
Set a bit variable to true.
5

120B0100
Bit Variable Clear
Set a bit variable to false.
5

0B020100
Visibility
Shows whether you're visible or not.
3

0B000200
Model Changer
Changes the character's model in certain preset ways defined in the Misc section. (Examples: sheathe sword, retreat into shell, etc). Will revert back after action ends.


0B010200
Model Changer (Permanent)
Changes the character's model in certain preset ways defined in the Misc section. (Examples: sheathe sword, retreat into shell, etc). Will persist even after action ends.

0B030100
Undo Model Changer
Undo the model pattern called by "Model Changer". It has no effect on "Model Changer (Permanent)" because it is not return to the default.


18000100
Slope Contour Stand
Keeps feet properly on ground when using move on slope. 0: No feet are on the ground. 2: Left foot is on the ground. 4: Right foot if on the ground. 6: Both feet are on the ground.


18010200
Slope Contour Timer
Changes the slope event over a set Frame duration.


18010300
Slope Event?
Moves entire character to match sloped ground?
003

18030200
Set Slope Angle Limit
Used to specify an angle threshold for the given Slope Event ID.
01

0C090100
Allow/Disallow Ledgegrab
Allow or disallow grabbing ledges during the current sub action.

0E000100
Set Air/Ground
Sets the current physics state of your character.

0E050100
Set Air/Ground Article/Item ?
Sets the current physics state of the article/item. Used in Snake's mortar and Ness' PK fire.

08000100
Set Aerial/Onstage State
Determines whether or not the character will slide off the edge.

09000100
Module09 00
Air/ground related. In the air, it's set to 2, and the edge to 5. On the ground, it's almost always 0. Setting this to any setting other than 2 while in the air will replenish jumps and recovery moves.

0C040000
Set Aerial State
Move to aerial state when on the ground.


08070000
Through Passable Floor
When on a passable floor, pass through that floor. 

1A000100
Screenshake
Shakes the screen.


1A080000
Normal Camera
Return the camera to its normal settings.


1A030400
Set Camera Boundaries
Changes the camera boundaries of your character. Does not reset the camera boundaries; rather, it adds to them. Reverts to normal when the animation ends.
1111

1A040500
Camera Closeup
Zoom the camera on the character.
00111

1A060100
Detach/Attach Camera (Close)
Causes the camera to follow or stop following a character.
3

1A070100
Detach/Attach Camera (Far)
Set whether the camera recognizes characters.
3

1A090000
Camera 09
Undefined.

1A0B0000
Force Camera Control
Appears to override any other settings in favor of the character's preference.


1A0C0000
Enable Camera Zoom
Undo the effect of "Disable Camera Zoom". (Note: If read "Disable Camera Zoom" multiple times, you need to read the same or more times to get the effect)

20000200
Turn 00
unknown.

1F000100
Pickup Item
Cause the character to recieve the closest item in range.


1F000200
Pickup Item
Cause the character to recieve the closest item in range.


1F010300
Throw Item
Cause the character to throw the currently held item.
555

1F0E0500
Throw Item
Cause the character to throw the currently held item.
11555

1F020000
Drop Item
Cause the character to drop any currently held item.


1F030100
Consume Item
Cause the character to consume the currently held item.


1F0A0000
Delete Held Item
Deletes the item that the character is holding.


1F050000
Fire Weapon
Fires a shot from the currently held item. (May have other unknown applications)


1F060100
Fire Projectile
Fires a projectile of the specified degree of power.


1F070100
Rocket Operation
Undefined: Is used when firing a cracker launcher.
5

1F080100
Generate Item
Generate an item in the character's hand.

1F120600
Generate and Throw Item (Custom)
Generates and immediately throws a given item. Requires the "Custom GenerateAndThrowItem PSA command" code by Sammi Husky.
000111

1F090100
Held Items Visibility
Determines visibilty of the currently held item.
3

1F0F0100
Wearable Items Visibility
Visiblity of wearable items (bunny hood, franklin badge, screw attack, etc)
3

1F040200
Item Property
Modify a property of the currently held item.
01

1F0C0100
Weapon Operation
Creates a beam sword trail. Probably has more uses among battering weapons.


1F0D0000
Release Assist
Release Assist Trophy or Poke Ball.


0C060000
Enter Final Smash State
Allows use of Final Smash locked articles, variables, etc. Highly unstable. When used in certain articles (such as Mario's fireball), it loads in a value from article floating point parameter table and applies it (Mario's fireball loads in velocity bounce multiplier, for example).


0C070000
Exit Final Smash State
Exit Final Smash State.


14050100
Accept Various Gimmicks Effect
When false, disable various gimmicks (Wind, Ladder, Swim, door etc). There are also effects that are not related to the stage gimmick, such as not being able to pick up items, ignore Negative zone, the spring cannot be used, and cannot Footstool.
3

0C160000
Disable Magifying Glass
Disable the display and damage of magnifying glass.


0C0D0000
Reset Stage Speed
Return stage speed to normal setting.


0C0C0000
Slow Stage Speed
Slow down the progress of the stage.


0C0E0000
Stop Stage Speed
Stop the progress of the stage. (Note: If use it in Subspace, you will not be able to proceed.)


0C230200
Time Manipulation
Change the speed of time for various parts of the environment. Scalar=time stop, Value=slow time. If you use a Scalar in parameter 0, then use parameter 1 to a value set how long time stops. if you use a value in parameter 0, use parameter 1 to set a value how long time slows. Using a scalar in parameter 0 and 1 will stop time forever.


0C250100
Tag Display
Disables or enables tag display for the current sub action. (tag is the icon above your player)
3

01000000
Go to Loop Rest 01
Used with "Go to Loop Rest 02" or "Flow 03" to reset the Event List timer when the animation loops.


01020000
Go to Loop Rest 02
Used with "Go to Loop Rest 01" to reset the Event List timer when the animation loops.


00030000
Flow 03
Used with "Go to Loop Rest 01" to reset the Event List timer when the animation loops.

04010200
Set Loop Resume Requirement 01
Set requirement for reading "Loop Rest" or later.
06

14070900
Aesthetic Wind Effect 2
Moves nearby movable model parts (capes, hair, etc) with a wind specified by the parameters.
011111111

14070A00
Aesthetic Wind Effect
Moves nearby movable model parts (capes, hair, etc) with a wind specified by the parameters.
0111111110

14040100
Terminate Wind Effect
Ends the wind effect spawned by the "Aesthetic Wind Effect" event.


0D000200
Concurrent Infinite Loop
Runs a subroutine once per frame for the current action in parallel. This subroutine loop will run independently of the code that comes after it in the action.
02

0D010100
Terminate Concurrent Infinite Loop
Stop the execution of a loop created by 0D000200 (Concurrent Infinite Loop).


07070200
Rumble
Controls the rumble on the controller.


070B0200
Rumble Loop
Creates a rumble loop on the controller.

0E080200
Set Momentum
Controls the movement velocity of the object. (Note: Can't use variables as parameters.)
11

0E080400
Set/Add Momentum
Controls the movement velocity of a moving character (contains add/subtract parameters).
1100

0E010200
Add/Subtract Momentum
Adds or subtracts speed to the char's current momentum.
11

0E060100
Disallow Certain Movements
When set to 1, disables vertical gravity. When set to 2, sideways movement is disallowed. Note: Hitstun can often times enhance momentum in the disabled direction.


0E070100
Reallow Certain Movements
This must be set to the same value as Disallow Certain Movements to work.


0E020100
Prevent Vertical Movement
When set to 1, vertical speed and acceleration are reset back to 0.
 
 
0E040100
Prevent Horizontal Gravity
When set to 1, horizontal speed and decay rate are reset back to 0.

0C140200
Set Static Article
Used in victories.


0C150100
Remove Static Article
Used in victories.


020D0100
Change Reading Action
Only used in Action Pre. Change the Action ID to be read.


040A0100
Sub Actions 0A
Unknown. Set Sub Action ID?


040B0100
Sub Actions 0B
Unknown. Set Frame Speed?
1

04080300
Set Bone Motion Override
Overrides all motions following the specified bone by the motion of the specified sub action. Normally, this effect lasts until the end event "End Bone Motion Override" is loaded (It may be ended by getting, using or discarding of the item). It also loads the event of the sub action specified by this event. So, it can end this effect from the specified subaction. Of course, can also load different motion here, but in this case the event in the subaction cannot be loaded.
000

040D0100
End Bone Motion Override
End "Set Bone Motion Override".
0

040E0200
Set Bone Motion Override Animation Frame
Sets the animation frame for "Set Bone Motion Override".
01

040F0200
Set Bone Motion Override Frame Speed Modifier
Sets the Frame Speed Modifier for "Set Bone Motion Override".
01

04100200
Set Texture Motion Override
Similar to "Set Bone Motion Override", except it effects all non-bone animations (SRT, CLR, PAT, etc).
00

04110100
End Texture Motion Override
Ends "Set Texture Motion Override".
0

04120200
Set Texture Motion Override Animation Frame
Sets the animation frame for "Set Texture Motion Override".
01

04130200
Set Texture Motion Override Frame Speed Modifier
Sets the Frame Speed Modifier for "Set Texture Motion Override".
01


04070100
Frame Speed Modifier
Dictates the frame speed of the sub action. Example: Setting to 2 makes the animation and timers occur twice as fast.
1

04070200
Multiply Frame Speed Modifier
Multiplies the current Frame Speed. Example: Setting to 2 will multiply the current Frame Speed by 2.
10

04060100
Set Animation Frame
Changes the current frame of the animation. Does not change the frame of the sub action (i.e. timers and such are unaffected). Works when used in articles that have assigned animations in the FitEtc file.
1

04140100
Set Animation & Timer Frame
Changes the current frame of the animation and timers.
1

04180100
Sub Action Animation Offset
Offsets a Change Sub Action command by what's specified in this command.
0

05000000
Reverse Direction
The object is now considered to be facing the other direction. It will not visually change direction until the current animation ends or is interrupted.


05010000
Left Direction
Sets the character's direction to the left. The effect occurs when the current Action is changed. To change the direction immediately, "Decide Direction" is required.


05020000
Right Direction
Sets the character's direction to the right. The effect occurs when the current Action is changed. To change the direction immediately, "Decide Direction" is required.


05030000
Set Direction
Sets the character's direction according to control stick X axis position. The effect occurs when the current Action is changed. To change the direction immediately, "Decide Direction" is required.


05040000
Decide Direction
Immediately changes the direction of the character in the direction set by "Set Direction" and similar commands.


05050100
Change Model Size
Change the character size. Resizing by this event does not change the ability or damage done. Also, when get an item that changes size such as mushrooms, it will change from the base size. (In other words, the size changed by this event will be invalid.)
1

05060300
Rotate Character Model
Rotates character's model by amount specified. Persists until changed.
111

05090300
Set Character Position
Teleport to the specified position based on the stage. Normally, unaffected by terrain. However, usually cannot move normally during ground actions. (Even during ground action, if the specified position exceeds the boundary, it will self-destruct)
111

050A0300
Set Character Position 2
Teleport to the specified position based on the stage. If there are walls, floors, or ceilings before to the specified position, There is a case that stops at that place. And, usually cannot move normally during ground actions. (Even during ground action, if the specified position exceeds the boundary, it will self-destruct)
111

050B0300
Set Character Position (Relative)
Teleport to the specified position based on the character position. If there are walls, floors, or ceilings before to the specified position, There is a case that stops at that place. And, usually cannot move normally during ground actions. (Even during ground action, if the specified position exceeds the boundary, it will self-destruct)
111

050C0000
Reverse Model Direction (Transient)
Reverse Model Direction. This effect ends when current action is changed.

062D0000
Collisions 2D
Undefined. Offensive Collision related?


07000000
ResetFlickX
Possibly clears the controller buffer.


07010000
ResetFlickY
Undefined.


07020000
ResetTrigger
Undefined.


07060100
Controller 06
Undefined.
3

070C0000
Controller 0C
Undefined.


08010100
Edge Interaction 01
unknown.


08020100
Edge Interaction 02
unknown.


08040100
Edge Interaction 04
unknown.
3

0C010000
Character Specific 01
Undefined.


0C130000
Character Specific 13
Undefined.


0C170100
Character Specific 17
Undefined. Often appears before 0C25 (Tag Display)
3

0C170200
Character Specific 17 Variable
Undefined. Often appears before 0C25 (Tag Display)
35

0C1C0200
Character Specific 1C
Used in Fighter.pac to do something based on which throw is in progress.

0C1C0300
Character Specific 1C Boolean
Unknown.
003

0C1B0100
Character Specific 1B
Unknown.
5

0C240100
Character Specific 24
Unknown.
3

0C260100
Character Specific 26
Unknown.
3

0C200200
Character Specific 20
Unknown.
03

0C270000
Character Specific 27
Undefined. Often appears within Switch statements.

0C290000
Character Specific 29
Undefined.

0C2B0000
Character Specific 2B
Undefined.


0E0B0200
Graphic Model Specf
Appears to control posture graphics.

111D0100
Effect ID
Undefined.

1F110100
Item-11
Undefined.

0F030200
Link 03
unknown.


17000000
Physics Normalize
Returns to normal physics.


17010000
Physics 01
Undefined.


17050000
Physics 05
Undefined.


19010000
Module19 01
Undefined.

0D070200
Set Thread Type (Custom)
Sets a new thread type. (Requires the Independent Subroutines code by Mawootad.)


0D050200
Independent Subroutine (Custom)
Makes and starts a new independent subroutine. (Requires the Independent Subroutines code by Mawootad.)
02

0D060100
Terminate Independent Subroutine (Custom)
Stops a running independent subroutine. (Requires the relevant code by Mawootad.)
2

12200200
Attribute Range Set (Custom)
Requires the On the Fly Attribute Modification code by Mawootad.
15

12210200
Attribute Range Add (Custom)
Requires the On the Fly Attribute Modification code by Mawootad.
15

12220200
Attribute Range Subtract (Custom)
Requires the On the Fly Attribute Modification code by Mawootad.
15

12230200
Attribute Range Multiply (Custom)
Requires the On the Fly Attribute Modification code by Mawootad.
15

12240200
Attribute Range Divide (Custom)
Requires the On the Fly Attribute Modification code by Mawootad.
15

C0DE0100
Change Hitbox Sound Effect (Custom)
Change the sound effect of the next hitbox. Requires the Hitbox Sound Effect Change System code by JOJI.
0

12150300
Read from Pointer Path to variable (Custom)
Requires Pointer Wizardry code by Eon
550

12160400
Read from Pointer Path with Mask to variable (Custom)
Requires Pointer Wizardry code by Eon
5500 

12170300
Write Integer to Pointed Address (Custom)
Requires Pointer Wizardry code by Eon
550

12180300
Write Float to Pointed Address (Custom)
Requires Pointer Wizardry code by Eon
550

12190400
Write Bit using Mask to Pointed Address (Custom)
Requires Pointer Wizardry code by Eon
5500

121A0200
Read from Pointer Path using Main Index to variable (Custom)
Requires Pointer Wizardry code by Eon
550

121A0F00
Read from Pointer Path using Main Index to variable (Custom)(+D00)
Requires Pointer Wizardry code by Eon
550


121B0300
Read from Pointer Path using Main Index with Mask to variable (Custom)
Requires Pointer Wizardry code by Eon
5500 

121C0200
Write Integer to Pointed Address using Main Index (Custom)
Requires Pointer Wizardry code by Eon
550

121D0200
Write Float to Pointed Address using Main Index (Custom)
Requires Pointer Wizardry code by Eon
550

121E0300
Write Bit using Mask to Pointed Address using Main Index (Custom)
Requires Pointer Wizardry code by Eon
550

12500200
sin (Custom)
Executes a sin equation, storing the result into the variable of your choice. Requires Maths code by Eon
55

12510200
cos (Custom)
Executes a cos equation, storing the result into the variable of your choice. Requires Maths code by Eon
55

12520200
asin (Custom)
Executes an asin equation, storing the result into the variable of your choice. Requires Maths code by Eon
55

12530200
acos (Custom)
Executes an acos equation, storing the result into the variable of your choice. Requires Maths code by Eon
55

12540300
aTan2 (Custom)
Executes an aTan2 equation, storing the result into the variable of your choice. Requires Maths code by Eon
555

12550200
sqrt (Custom)
Executes a sqrt equation, storing the result into the variable of your choice. Requires Maths code by Eon
55

12560300
power (Custom)
Executes a power equation, storing the result into the variable of your choice. Requires Maths code by Eon
515

12570100
getPi (Custom)
Retrieves and stores pi into the variable of your choice. Requires Maths code by Eon
5

03000000
ResetLayerType(2)
Undefined.
0

03000100
ResetLayerType
Undefined
0

03010400
Set Bone Rotation (XYZ)
Rotates the given bone on every axis.
0111

03020200
Set Bone Rotation (X)
Rotates the given bone on the X-axis.
01

03030200
Set Bone Rotation (Y)
Rotates the given bone on the Y-axis.
01

03040200
Set Bone Rotation (Z)
Rotates the given bone on the Z-axis.
01

03050100
Set TransN Bone ID
Changes the TransN Bone ID reference.
0

03060400
Set Bone Scale (XYZ)
Scales the given bone on every axis.
0111

03070200
Set Bone Scale (X)
Scales the given bone on the X-axis.
01

03080200
Set Bone Scale (Y)
Scales the given bone on the Y-axis.
01

03090200
Set Bone Scale (Z)
Scales the given bone on the Z-axis.
01

030A0400
Store Global Bone Position
Stores the position of the given bone into 3 variables, one for each axis.
0555

030B0400
Set Bone Translation (XYZ)
Translates the given bone on every axis.
0111

030C0200
Set Bone Translation (X)
Translates the given bone on the X-axis.
01

030D0200
Set Bone Translation (Y)
Translates the given bone on the Y-axis.
01

030E0200
Set Bone Translation (Z)
Translates the given bone on the Z-axis.
01

1C000200
Set Hitlag
Sets the hitlag on the current move.
03

11210100
Set GFX Animation Index (Custom)
Sets the animation ID for the chosen GFX, clears after GFX spawn. This command must be placed before using your desired Graphic Effect command. Requires Eon's "Set Anim Index" code.

65000000
Destroy Item
Destroys the current item

65030300
Set Model Rotation
Sets the models rotation (pitch, yaw, roll)
111

660B0300
Set Model Rotation
Sets the models rotation (pitch, yaw, roll)
111

66010300
Set Constant Model Rotation
Sets the models rotation constantly (pitch, yaw, roll)
111

65040100
Set Deletion Timer
Sets the time of deletion (in hexadecimals)

651D0200
Set Ownership
(Owner?, Team?)Sets the ownership of the current item(0xFFFFFFFF to be neutral).

22000100
Set Ownership Interactibility
When set to FFFFFFF it allows the owner to get hurt by the item.

22020100
Set Ownership Interactibility 2
(usually 0x14) = Set Ownership Interactibility (again?, this is used in explosives to enable damage to the original attacker).

651F0100
Grabbable state
Determines wheter or not the item can be picked up by players or not.

66060100
Stick to Surface
Can make an item stick to a surface and reflect its inclination, used on Bumper and Motion Sensor Bomb.

08050400
Modify ECB Shape
Modifies the collision points of a character's ECB.
1110

65070100
Find Target
Finds a target (??? usually 0x2/0x4)

66050300
Metroid Schmovement???
"(??? usually 0x4, speed, TimetomoveAgain) = Metroid like movement, has to be called once "

66000A00
Apply Momentum
Alters the item's vertical and horizontal speed. 
1111111111

66000D00
Apply Momentum & Direction Speed
Alters the item's vertical. horizontal speed and whether or not its based on its direction. 
1111111111333

66020300
Remove Momentum
Decreases the item's horizontal and vertical speed
11

65020600
Math Functions?
Seems to carry different values to pre existing ones in order

65050100
Set Vanish Timer (global)
sets the timer (la-basic 11, not la-basic 6), doesn't disappear normally, however the timer ticks down, you have to manually check la-basic 11 to make it disappear (used in snake's grenade)

080C0000
Detach
Detaches the current item to let go again.

081A0100
Unknown Boolean
It turns on some flag with no helpful function call, it takes one bool as argument though.
3
